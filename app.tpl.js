!function(e){try{e=angular.module("C:")}catch(t){e=angular.module("C:",[])}e.run(["$templateCache",function(e){e.put("index.html",'<!DOCTYPE html><html ng-app="generic.table"><head><title></title><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta charset="utf-8"><link href="bower_components/prism/themes/prism-okaidia.css" type="text/css" rel="stylesheet"><link href="bower_components/prism/plugins/line-numbers/prism-line-numbers.css" type="text/css" rel="stylesheet"><link href="app.css" type="text/css" rel="stylesheet"></head><body><script src="bower_components/less.js/dist/less.js" data-concat="false"></script><script src="bower_components/jquery/jquery.js"></script><script src="bower_components/bootstrap/dist/js/bootstrap.js"></script><script src="bower_components/underscore/underscore.js"></script><script src="bower_components/moment/moment.js"></script><script src="bower_components/angular/angular.js"></script><script src="bower_components/angular-ui-router/release/angular-ui-router.js"></script><script src="bower_components/angular-sanitize/angular-sanitize.min.js"></script><script src="bower_components/angular-animate/angular-animate.js"></script><script src="bower_components/angular-resource/angular-resource.js"></script><script src="bower_components/angular-strap/dist/angular-strap.min.js"></script><script src="bower_components/angular-strap/dist/angular-strap.tpl.min.js"></script><script src="bower_components/angular-filter/dist/angular-filter.js"></script><script src="bower_components/angular-bind-notifier/dist/angular-bind-notifier.min.js"></script><script src="bower_components/prism/prism.js"></script><script src="bower_components/prism/plugins/line-numbers/prism-line-numbers.js"></script><script src="app.js"></script><script src="directive/generic-table/generic-table.js"></script><script src="partial/examples/examples.js"></script><script src="directive/prism/prism.js"></script><div><div id="content" class="container"><div class="row"><div ui-view=""></div></div></div></div></body></html>')}])}(),function(e){try{e=angular.module("generic.table")}catch(t){e=angular.module("generic.table",[])}e.run(["$templateCache",function(e){e.put("partial/examples/examples.html",'<div class="col-md-12"><div ng-controller="DocumentationController"><h1>Generic table</h1><h2>Usage</h2><p>The generic-table needs three things to work: <strong>settings</strong>, <strong>field definitions</strong> and <strong>data</strong>, totals is optional.</p><br><h4>Settings</h4><pre>\n            <code class="line-numbers language-javascript" prism="">\n                settings:[{\n                    objectKey:\'name\', // key for mapping column with data and totals\n                    visible:true, // should column be visible\n                    enabled:true, // should column be enabled (required for filters to work)\n                    sort:\'false\', // should column be sortable\n                    sortOrder:0, // sort order of column, 0 will be sorted first\n                    columnOrder:0 // column order, starting from the left with zero\n                }]\n            </code>\n        </pre><br><h4>Field definitions</h4><pre>\n            <code class="line-numbers language-javascript" prism="">\n                fields:[{\n                    name:\'Name\', // name or label of the field, will be displayed as heading for column\n                    type:"STRING", // type of data, ie STRING, NUMBER etc.\n                    objectKey:\'name\', // key for mapping column with settings and totals\n                    classNames:"my-custom-class" // custom class names appended to the column\n                }]\n            </code>\n        </pre><br><h4>Data</h4><pre>\n            <code class="line-numbers language-javascript" prism="">\n                data:[{\n                    name:"some data" // array of objects with keys corresponding to the object keys defined in settings and field definitions\n                }]\n            </code>\n        </pre><br><h4>Totals</h4><pre>\n            <code class="line-numbers language-javascript" prism="">\n                totals:{\n                    name:"my summary" // object with keys corresponding to the object keys defined in settings and field definitions\n                }\n            </code>\n        </pre><br><h3>Attribute options</h3><p>Directive attributes available for generic-table directive.</p><generic-table gt-data="optionsTable.data" gt-settings="optionsTable.settings" gt-fields="optionsTable.fields" gt-pagination="false"></generic-table><br><h3>Events</h3><p>Events emitted by the table.</p><generic-table gt-data="eventsTable.data" gt-settings="eventsTable.settings" gt-fields="eventsTable.fields" gt-pagination="false"></generic-table><br><h3>Event listeners</h3><p>Use event listeners to change/update table data, table settings and field definitions. The table will also listen for changes to row length ie. how many rows should be displayed.</p><generic-table gt-data="listenersTable.data" gt-settings="listenersTable.settings" gt-fields="listenersTable.fields" gt-pagination="false"></generic-table></div><div ng-controller="BasicExampleController"><br><h2>Examples</h2><h3>Basic table with static data</h3><a ng-click="example = example === true ? false:true;" class="link"><span ng-show="!example">Show code</span> <span ng-show="example">Hide code</span></a><div ng-if="example"><h4>Markup</h4><pre>\n            <code class="line-numbers language-markup" prism="">\n                &lt;generic-table gt-data=&quot;basicTable.data&quot; gt-settings=&quot;basicTable.settings&quot; gt-fields=&quot;basicTable.fields&quot; gt-totals=&quot;basicTable.totals&quot; gt-rows=&quot;5&quot;&gt;&lt;/generic-table&gt;\n            </code>\n            </pre><h4>Javascript</h4><pre>\n            <code class="line-numbers language-javascript" prism="">\n                angular.module(\'generic.table\').controller(\'BasicExampleController\',function($scope){\n                    // Basic table with static data\n                    $scope.basicTable = {\n                        settings: [\n                            {\n                                objectKey:\'city\',\n                                visible:true,\n                                enabled:true,\n                                sort:\'enable\',\n                                sortOrder:1,\n                                columnOrder:0\n                            },{\n                                objectKey:\'numberOfCats\',\n                                visible:true,\n                                enabled:true,\n                                sort:\'enable\',\n                                sortOrder:0,\n                                columnOrder:1\n                            }\n                        ],\n                        fields:[\n                            {\n                                name:\'City\',\n                                type:"STRING",\n                                objectKey:\'city\',\n                                classNames:""\n                            },{\n                                name:\'Number of cats\',\n                                type:"NUMBER",\n                                objectKey:\'numberOfCats\',\n                                classNames:"text-right"\n                            }\n                        ],\n                        data:[{\n                            "city": "Juliaca",\n                            "numberOfCats": 149639\n                        }, {\n                            "city": "Watergrasshill",\n                            "numberOfCats": 436290\n                        }, {\n                            "city": "Dondar Quşçu",\n                            "numberOfCats": 725965\n                        }, {\n                            "city": "Florida",\n                            "numberOfCats": 258855\n                        }, {\n                            "city": "Sosnovyy Bor",\n                            "numberOfCats": 486188\n                        }, {\n                            "city": "Bogdanovich",\n                            "numberOfCats": 691411\n                        }, {\n                            "city": "Zaragoza",\n                            "numberOfCats": 304539\n                        }, {\n                            "city": "Karlstad",\n                            "numberOfCats": 364097\n                        }, {\n                            "city": "Tanjay",\n                            "numberOfCats": 970819\n                        }, {\n                            "city": "Troparëvo",\n                            "numberOfCats": 768663\n                        }]\n                    };\n                });\n            </code>\n            </pre></div><generic-table gt-data="basicTable.data" gt-settings="basicTable.settings" gt-fields="basicTable.fields" gt-totals="basicTable.totals" gt-rows="5"></generic-table></div><div ng-controller="CustomRenderExampleController"><h3>Table with custom render function</h3><a ng-click="example = example === true ? false:true;" class="link"><span ng-show="!example">Show code</span> <span ng-show="example">Hide code</span></a><div ng-if="example"><h4>Markup</h4><pre>\n            <code class="line-numbers language-markup" prism="">\n                &lt;generic-table gt-settings=&quot;tableCustomRender.settings&quot; gt-fields=&quot;tableCustomRender.fields&quot; gt-totals=&quot;tableCustomRender.totals&quot; gt-rows=&quot;25&quot;&gt;&lt;/generic-table&gt;\n            </code>\n        </pre><h4>Javascript</h4><pre>\n            <code class="line-numbers language-javascript" prism="">\n'+"                angular.module('generic.table').controller('CustomRenderExampleController',function($scope, mockService,$filter,$sce){\n                    // Table with custom render function\n                    $scope.tableCustomRender = {\n                        settings: [\n                            {\n                                objectKey:'fullName',\n                                visible:true,\n                                enabled:true,\n                                sort:'enable',\n                                sortOrder:0,\n                                columnOrder:0\n                            },{\n                                objectKey:'favoriteColor',\n                                visible:true,\n                                enabled:true,\n                                sort:'disabled',\n                                sortOrder:0,\n                                columnOrder:4\n                            },{\n                                objectKey:'birthday',\n                                visible:true,\n                                enabled:true,\n                                sort:'enable',\n                                sortOrder:0,\n                                columnOrder:1\n                            },{\n                                objectKey:'age',\n                                visible:true,\n                                enabled:true,\n                                sort:'disabled',\n                                sortOrder:0,\n                                columnOrder:2\n                            }\n\n                        ],\n                        fields:[\n                            {\n                                name:\"Favorite color\",\n                                type:\"STRING\",\n                                objectKey:'favoriteColor',\n                                classNames:\"text-right middle\",\n                                render:function(row){return $sce.trustAsHtml('<div style=\"float:right;width:15px;height:15px;border-radius:50%;background: '+row.favoriteColor+'\"></div>')}\n                            },{\n                                name:\"Birthday\",\n                                type:\"DATE\",\n                                objectKey:'birthday',\n                                classNames:\"\",\n                                render: function(row){return moment.unix(row.birthday).format('YYYY-MM-DD')}\n                            },{\n                                name:'Name',\n                                type:\"STRING\",\n                                objectKey:'fullName',\n                                classNames:\"\"\n                            },{\n                                name:'Age',\n                                type:\"NUMBER\",\n                                objectKey:'age',\n                                classNames:\"text-right\",\n                                render: function(row){return moment().diff(moment.unix(row.birthday),'years')}\n                            }\n                        ],\n                        data:[]\n                    };\n\n                    mockService.getJsonData().then(function(res){\n                        $scope.$broadcast(\"update-table\", res);\n                    });\n\n\n                }).factory('mockService',function($resource, $http) {\n\n                    /* remote service example\n                    function getData () {\n                        var url = 'http://example.com/json.json';\n                        return $http.jsonp(url).then(function (response) {\n                            return response.data;\n                        });\n\n                    }*/\n\n                    function getJsonData(){\n                        var url = 'mock-data.json';\n                        return $http.get(url).then(function (response) {\n                            //console.log(response.data);\n                            return response.data;\n                        });\n                    }\n\n                    return {\n                        \"getJsonData\":getJsonData\n                    };\n                });\n            </code>\n        </pre></div><generic-table gt-settings=\"tableCustomRender.settings\" gt-fields=\"tableCustomRender.fields\" gt-totals=\"tableCustomRender.totals\" gt-rows=\"25\"></generic-table></div></div>")}])}(),function(e){try{e=angular.module("generic.table")}catch(t){e=angular.module("generic.table",[])}e.run(["$templateCache",function(e){e.put("directive/generic-table/generic-table.html",'<div class="generic-table"><table class="table table-condensed table-hover table-sortable" ng-if="gtHasData"><thead><tr ng-class="::gtRowTransition ? \'fade-in animate\':\'\'"><th ng-repeat="field in ::gtFields | orderBy:\'columnOrder\' track by field.objectKey" ng-show=":gtRefresh:gtSettings | getProperty:field.objectKey:\'visible\'" ng-class=":gtRefresh:[field.classNames, (field.objectKey | camelToDash) + \'-column\', \'sort-\'+(gtSettings | getProperty:field.objectKey:\'sort\')]"><span ng-click="(gtSettings | getProperty:field.objectKey:\'sort\') === \'disable\' ? \'\':sort(field.objectKey)">{{::field.name}}</span></th></tr><tr ng-if="gtTotals" ng-class="::gtRowTransition ? \'fade-in animate\':\'\'"><td ng-repeat="field in ::gtFields | orderBy:\'columnOrder\' track by field.objectKey" class="total-column" ng-show=":gtRefresh:gtSettings | getProperty:field.objectKey:\'visible\'" ng-class="::[(gtFields | getProperty:field.objectKey:\'classNames\'), (field.objectKey | camelToDash) + \'-column\']" ng-bind-html="::gtFields | gtRender:gtTotals:field.objectKey"></td></tr></thead><tbody><tr ng-repeat="row in gtDisplayData | limitTo: displayRows" gs-event="" ng-class="::gtRowTransition ? \'fade-in animate\':\'\'"><td ng-repeat="field in ::gtFields | orderBy:\'columnOrder\' track by field.objectKey" ng-show=":gtRefresh:gtSettings | getProperty:field.objectKey:\'visible\'" ng-class="::[(gtFields | getProperty:field.objectKey:\'classNames\'), (field.objectKey | camelToDash) + \'-column\']" ng-bind-html="::gtFields | gtRender:row:field.objectKey"></td></tr></tbody></table><div class="gt-pagination text-center" ng-if="gtPagination === true"><ul class="pagination"><li ng-class="{disabled: currentPage === 0}" ng-show="currentPage !== 0"><button class="btn-link link" ng-click="previousPage()" translate="ALL.GENERAL#PAGINATION_PREVIOUS#BUTTON" ng-disabled="currentPage === 0">« Prev</button></li><li ng-show="currentPage > 3"><button class="btn-link link" ng-click="setPage(0)">1</button><small>…</small></li><li style="display: inline;padding: 0 5px;" ng-repeat="page in pagination" ng-class="page === currentPage ? \'active\':\'\'"><button class="btn-link link" ng-click="setPage(page)">{{page+1}}</button></li><li ng-show="currentPage +1 < pages.length-1 && pages.length > 4"><small ng-show="currentPage + 3 < pages.length">…</small><button class="btn-link link" ng-click="setPage(pages.length-1)">{{pages.length}}</button></li><li ng-class="{disabled: currentPage == pages.length}" ng-show="currentPage+1 !== pages.length"><button class="btn-link link" ng-click="nextPage()" translate="ALL.GENERAL#PAGINATION_NEXT#BUTTON" ng-disabled="currentPage+1 === pages.length">Next »</button></li></ul></div></div>')}])}();